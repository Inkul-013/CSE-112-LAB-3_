#include <SoftwareSerial.h>
SoftwareSerial mySerial(12, 13); // RX, TX

#define motor1 5
#define motor2 6
#define motor3 9
#define motor4 10

int adc = 150;

void setup() {
  Serial.begin(9600);  //Set the baud rate to your Bluetooth module.
  mySerial.begin(9600);
  pinMode(motor1, OUTPUT);
  pinMode(motor2, OUTPUT);
  pinMode(motor3, OUTPUT);
  pinMode(motor4, OUTPUT);
}

void loop() {
  if (mySerial.available() > 0) {
    char command = mySerial.read();
    if (command == 'S') {}
    else {
      Serial.println(command);
    }

    switch (command) {
      case 'F':
        forward();
        break;
      case 'B':
        back();
        break;
      case 'L':
        left();
        break;
      case 'R':
        right();
        break;
      case 'S':
        Stop();
        break;
      case 'G':
        Fleft();
        break;
      case 'I':
        Fright();
        break;
      case 'H':
        Bleft();
        break;
      case 'J':
        Bright();
        break;
      case '0':
        adc = 0;
        break;
      case '1':
        adc = 25;
        break;
      case '2':
        adc = 50;
        break;
      case '3':
        adc = 75;
        break;
      case '4':
        adc = 100;
        break;
      case '5':
        adc = 125;
        break;
      case '6':
        adc = 150;
        break;
      case '7':
        adc = 175;
        break;
      case '8':
        adc = 200;
        break;
      case '9':
        adc = 225;
        break;
      case 'q':
        adc = 255;
        break;
    }
  }
}

void forward()
{
  analogWrite(motor1, adc);
  analogWrite(motor2, 0);
  analogWrite(motor3, adc);
  analogWrite(motor4, 0);
}

void back()
{
  analogWrite(motor1, 0);
  analogWrite(motor2, adc);
  analogWrite(motor3, 0);
  analogWrite(motor4, adc);
}

void left()
{
  analogWrite(motor1, 0);
  analogWrite(motor2, adc);
  analogWrite(motor3, adc);
  analogWrite(motor4, 0);
}

void right()
{
  analogWrite(motor1, adc);
  analogWrite(motor2, 0);
  analogWrite(motor3, 0);
  analogWrite(motor4, adc);
}

void Stop()
{
  analogWrite(motor1, 255);
  analogWrite(motor2, 255);
  analogWrite(motor3, 255);
  analogWrite(motor4, 255);
}

void Fleft()
{
  analogWrite(motor1, (adc - ((adc / 100) * 40)));
  analogWrite(motor2, 0);
  analogWrite(motor3, adc);
  analogWrite(motor4, 0);
}

void Fright()
{
  analogWrite(motor1, adc);
  analogWrite(motor2, 0);
  analogWrite(motor3, (adc - ((adc / 100) * 40)));
  analogWrite(motor4, 0);
}

void Bleft()
{
  analogWrite(motor1, 0);
  analogWrite(motor2, (adc - ((adc / 100) * 40)));
  analogWrite(motor3, 0);
  analogWrite(motor4, adc);
}

void Bright()
{
  analogWrite(motor1, 0);
  analogWrite(motor2, adc);
  analogWrite(motor3, 0);
  analogWrite(motor4, (adc - ((adc / 100) * 40)));
}
